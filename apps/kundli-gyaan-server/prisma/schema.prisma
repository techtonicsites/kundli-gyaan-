datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Consultation {
  astrologer   Astrologer?             @relation(fields: [astrologerId], references: [id])
  astrologerId String?
  createdAt    DateTime                @default(now())
  date         DateTime?
  id           String                  @id @default(cuid())
  predictions  Prediction[]
  reports      Report[]
  status       EnumConsultationStatus?
  time         DateTime?
  updatedAt    DateTime                @updatedAt
  user         User?                   @relation(fields: [userId], references: [id])
  userId       String?
}

model Astrologer {
  callRecords       CallRecord[]
  consultationPrice Float?
  consultations     Consultation[]
  createdAt         DateTime       @default(now())
  id                String         @id @default(cuid())
  name              String?
  rating            Float?
  specialization    String?
  updatedAt         DateTime       @updatedAt
}

model Report {
  consultation   Consultation? @relation(fields: [consultationId], references: [id])
  consultationId String?
  content        String?
  createdAt      DateTime      @default(now())
  id             String        @id @default(cuid())
  updatedAt      DateTime      @updatedAt
  user           User?         @relation(fields: [userId], references: [id])
  userId         String?
}

model User {
  callRecords   CallRecord[]
  consultations Consultation[]
  createdAt     DateTime       @default(now())
  email         String?        @unique
  firstName     String?
  id            String         @id @default(cuid())
  kundlis       Kundli[]
  lastName      String?
  password      String
  reports       Report[]
  roles         Json
  updatedAt     DateTime       @updatedAt
  username      String         @unique
  visits        Visit[]
}

model CallRecord {
  astrologer   Astrologer? @relation(fields: [astrologerId], references: [id])
  astrologerId String?
  callEnd      DateTime?
  callStart    DateTime?
  createdAt    DateTime    @default(now())
  description  String?
  id           String      @id @default(cuid())
  updatedAt    DateTime    @updatedAt
  user         User?       @relation(fields: [userId], references: [id])
  userId       String?
}

model Visit {
  createdAt        DateTime  @default(now())
  id               String    @id @default(cuid())
  serviceRequested String?
  updatedAt        DateTime  @updatedAt
  user             User?     @relation(fields: [userId], references: [id])
  userId           String?
  visitDate        DateTime?
}

model Kundli {
  createdAt DateTime @default(now())
  details   Json?
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Prediction {
  consultation   Consultation? @relation(fields: [consultationId], references: [id])
  consultationId String?
  content        String?
  createdAt      DateTime      @default(now())
  id             String        @id @default(cuid())
  updatedAt      DateTime      @updatedAt
}

enum EnumConsultationStatus {
  Option1
}
