/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CallRecordListRelationFilter } from "../../callRecord/base/CallRecordListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { ConsultationListRelationFilter } from "../../consultation/base/ConsultationListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { KundliListRelationFilter } from "../../kundli/base/KundliListRelationFilter";
import { ReportListRelationFilter } from "../../report/base/ReportListRelationFilter";
import { VisitListRelationFilter } from "../../visit/base/VisitListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => CallRecordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CallRecordListRelationFilter)
  @IsOptional()
  @Field(() => CallRecordListRelationFilter, {
    nullable: true,
  })
  callRecords?: CallRecordListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ConsultationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ConsultationListRelationFilter)
  @IsOptional()
  @Field(() => ConsultationListRelationFilter, {
    nullable: true,
  })
  consultations?: ConsultationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => KundliListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KundliListRelationFilter)
  @IsOptional()
  @Field(() => KundliListRelationFilter, {
    nullable: true,
  })
  kundlis?: KundliListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ReportListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReportListRelationFilter)
  @IsOptional()
  @Field(() => ReportListRelationFilter, {
    nullable: true,
  })
  reports?: ReportListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => VisitListRelationFilter,
  })
  @ValidateNested()
  @Type(() => VisitListRelationFilter)
  @IsOptional()
  @Field(() => VisitListRelationFilter, {
    nullable: true,
  })
  visits?: VisitListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
