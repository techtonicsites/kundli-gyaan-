/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CallRecordListRelationFilter } from "../../callRecord/base/CallRecordListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { ConsultationListRelationFilter } from "../../consultation/base/ConsultationListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class AstrologerWhereInput {
  @ApiProperty({
    required: false,
    type: () => CallRecordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CallRecordListRelationFilter)
  @IsOptional()
  @Field(() => CallRecordListRelationFilter, {
    nullable: true,
  })
  callRecords?: CallRecordListRelationFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  consultationPrice?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ConsultationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ConsultationListRelationFilter)
  @IsOptional()
  @Field(() => ConsultationListRelationFilter, {
    nullable: true,
  })
  consultations?: ConsultationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  rating?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  specialization?: StringNullableFilter;
}

export { AstrologerWhereInput as AstrologerWhereInput };
