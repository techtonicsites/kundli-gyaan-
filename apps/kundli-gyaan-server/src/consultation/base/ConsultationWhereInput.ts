/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AstrologerWhereUniqueInput } from "../../astrologer/base/AstrologerWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { PredictionListRelationFilter } from "../../prediction/base/PredictionListRelationFilter";
import { ReportListRelationFilter } from "../../report/base/ReportListRelationFilter";
import { EnumConsultationStatus } from "./EnumConsultationStatus";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class ConsultationWhereInput {
  @ApiProperty({
    required: false,
    type: () => AstrologerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AstrologerWhereUniqueInput)
  @IsOptional()
  @Field(() => AstrologerWhereUniqueInput, {
    nullable: true,
  })
  astrologer?: AstrologerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  date?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PredictionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PredictionListRelationFilter)
  @IsOptional()
  @Field(() => PredictionListRelationFilter, {
    nullable: true,
  })
  predictions?: PredictionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReportListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReportListRelationFilter)
  @IsOptional()
  @Field(() => ReportListRelationFilter, {
    nullable: true,
  })
  reports?: ReportListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumConsultationStatus,
  })
  @IsEnum(EnumConsultationStatus)
  @IsOptional()
  @Field(() => EnumConsultationStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  time?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}

export { ConsultationWhereInput as ConsultationWhereInput };
